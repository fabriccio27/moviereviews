{"version":3,"sources":["reportWebVitals.js","reducers/auth.js","store/configureStore.js","actions/authActions.js","components/Header.js","components/MovieCard.js","components/LoadingPage.js","components/MoviesDashboardPage.js","components/CreateMoviePage.js","components/RatingForm.js","components/Rating.js","components/MovieRatingPage.js","components/MovieDetailPage.js","components/WatchlistCard.js","components/WatchlistPage.js","components/NotFoundPage.js","components/LoginPage.js","components/RegisterPage.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","isAuthenticated","user_info","error","authReducer","state","action","type","payload","localStorage","clear","storeGenerator","createStore","combineReducers","auth","composeWithDevTools","applyMiddleware","thunk","setUser","connect","userId","dispatch","logUserOut","className","to","activeClassName","onClick","MovieCard","movie","formattedRelease","DateTime","fromISO","release","toLocaleString","DATE_MED","style","id","title","average_rating","LoadingPage","src","alt","MovieDashboardPage","token","user_id","movies","sorting","abortController","AbortController","sortByDate","setState","sortByRating","console","log","fetch","signal","this","results","json","data","catch","err","abort","length","moviesSorted","sort","a","b","props","fontSize","map","React","Component","CreateMoviePage","handleOnChange","e","persist","target","name","value","handleOnSubmit","ev","preventDefault","method","headers","getItem","body","JSON","stringify","genre","plot","res","ok","Error","status","response","submitted","toString","split","onSubmit","htmlFor","placeholder","onChange","userInfo","RatingForm","movieId","useState","rating","setRating","comment","setComment","setSubmitted","setError","Fragment","url","hasOwnProperty","parseInt","min","max","maxLength","rows","cols","Rating","date","rate_date","MovieRatingPage","movie_id","match","params","ratings","needToRefresh","activateRefresh","bind","Promise","all","ratingData","movieData","Array","isArray","rating_components","no_components","withRouter","MovieDetailPage","addedToWl","handleAddToWl","detail","currentUserId","resp","obj","key","isEmpty","charAt","toUpperCase","slice","owner","handleRemoveFromWl","WatchlistPage","watchlist","targetId","newWatchlist","filter","username","NotFoundPage","LoginPage","password","setItem","RegisterPage","email","password2","error_message","component","rest","history","createBrowserHistory","AppRouter","exact","path","MoviesDashboardPage","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.45fd8ba0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const defaultState = {\r\n    isAuthenticated:false,\r\n    user_info:{},\r\n    error:\"\"\r\n}\r\n\r\nconst authReducer = (state = defaultState, action) =>{\r\n    switch (action.type){\r\n        case \"LOGIN\":\r\n            return {\r\n                isAuthenticated:true,\r\n                user_info:{...action.payload},\r\n                error:\"\"\r\n            };\r\n        case \"LOGOUT\":\r\n            localStorage.clear();\r\n            return {\r\n                isAuthenticated:false,\r\n                error:\"\",\r\n                user_info:{}\r\n            };\r\n        case \"SET_ERROR\":\r\n            return {\r\n                ...state,\r\n                error:action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","import thunk from \"redux-thunk\";\r\nimport {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n//import filtersReducer from \"../reducers/filters\";\r\nimport authReducer from \"../reducers/auth\";\r\n\r\n//esto de aca abajo hace que cuando importe el default de este archivo, obtenga el store ya creado y configurado con sus reducers\r\nconst storeGenerator =()=>{\r\n    const store = createStore(\r\n        combineReducers({\r\n            //filter:filtersReducer,\r\n            auth:authReducer\r\n        }),\r\n        composeWithDevTools(applyMiddleware(thunk)));\r\n\r\n    return store;\r\n};\r\n\r\nexport default storeGenerator;\r\n","/* aca tengo que tener las llamadas a api para obtener token, guardarlo en local storage y pasar info del usuario a state */\r\n\r\n/* \r\nEsto devuelve el endpoint de token\r\n'token': token.key,\r\n'user_id': user.pk,\r\n'username':user.username,\r\n'email': user.email */\r\n\r\nexport const setUser = (payload) => ({ type: \"LOGIN\", payload})\r\nconst setError = (payload) => ({ type: \"SET_ERROR\", payload})\r\n\r\nexport const logUserOut = () => ({type: \"LOGOUT\"})\r\n\r\n// Methods\r\n\r\n/* userInfo es lo que tengo de state en el componente de Login */\r\nexport const fetchUser = (userInfo) => dispatch => {\r\n    fetch(`http://localhost:8000/api/api-token-auth/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(userInfo)\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        /* console.log(data); */\r\n        if (data.hasOwnProperty(\"token\")){\r\n            localStorage.setItem(\"token\", data.token);\r\n            dispatch(setUser(data.user_info));\r\n        }else{\r\n            console.log(data.error);\r\n            dispatch(setError(data[\"error\"]))\r\n        }\r\n        \r\n    })\r\n    .catch(err=>console.err(`This happened while trying to authenticate: ${err}`))\r\n    //QUE PASA SI LAS CREDENCIALES SON INVALIDAS?\r\n}\r\n\r\n/* export const registerUser = (userInfo) => dispatch => {\r\n    fetch(`http://localhost:4000/users`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(userInfo)\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        // data sent back will in the format of\r\n        // {\r\n        //     user: {},\r\n        //.    token: \"aaaaa.bbbbb.bbbbb\"\r\n        // }\r\n        localStorage.setItem(\"token\", data.token)\r\n        dispatch(setUser(data.user))\r\n    })\r\n} */","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {logUserOut} from \"../actions/authActions\";\r\nimport {connect} from \"react-redux\";\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\n\r\nexport const Header = ({isAuthenticated, logUserOut, userId}) => (\r\n    <header>\r\n        <nav className=\"navbar\">\r\n            <MovieIcon/>        \r\n            <NavLink to=\"/dashboard\" activeClassName=\"selected\">Home</NavLink>\r\n            {isAuthenticated && <NavLink to={`/watchlist/${userId}`} activeClassName=\"selected\">Watchlist</NavLink>}\r\n            {isAuthenticated && <button className=\"logout-btn\" onClick={()=>logUserOut()}>Log Out</button>}\r\n            {!isAuthenticated && <NavLink to=\"/login\" activeClassName=\"selected\">Login</NavLink>}\r\n            {!isAuthenticated && <NavLink to=\"/register\" activeClassName=\"selected\">Register</NavLink>}\r\n        </nav>\r\n    </header>\r\n    \r\n)\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        logUserOut: ()=> dispatch(logUserOut())\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        userId:state.auth.user_info[\"user_id\"]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport {DateTime} from \"luxon\";\r\n\r\nconst MovieCard = ({movie})=>{\r\n    /* const [year, month, day] = movie.release.split(\"-\"); */\r\n    const formattedRelease = DateTime.fromISO(movie.release).toLocaleString(DateTime.DATE_MED);\r\n    \r\n    return(\r\n        <div className=\"card\" style={{\"width\": \"18rem\", \"margin\":\"1rem 0\"}}>\r\n            <div className=\"card-body card-body-custom\">\r\n                <Link to={`/movies/${movie.id}`}>\r\n                    <h3 className=\"card-title\">{movie.title}</h3><span>{formattedRelease}</span>\r\n                </Link>\r\n                <p className=\"card-text\">\r\n                    <span>{movie.average_rating}</span> <StarIcon/>\r\n                </p>\r\n                <Link to={`/ratings/${movie.id}/`} className=\"toRatings-link\">\r\n                    Ratings\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MovieCard;","import React from \"react\";\r\n\r\nconst LoadingPage = () => {\r\n    return(\r\n        <div>\r\n            <img src=\"https://media.giphy.com/media/YpvudlEonQZ2ahskGR/giphy.gif\" className=\"loading-img\" alt=\"film reel passing\"/>\r\n        </div>\r\n    )\r\n}\r\nexport default LoadingPage;","import React from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport LoadingPage from \"./LoadingPage\";\r\nimport {connect} from \"react-redux\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass MovieDashboardPage extends React.Component {\r\n   state = {\r\n        token:\"\",\r\n        user_id:\"\",\r\n        movies:[],\r\n        sorting:\"average_rating\"\r\n    }\r\n  \r\n    abortController = new AbortController();\r\n  \r\n    componentDidMount(){\r\n      // aca tengo que buscar recursos de drf API\r\n      // http://localhost:8000/api/movies/\r\n      console.log(\"Componente app montado\");\r\n      fetch('http://localhost:8000/api/movies/', {signal:this.abortController.signal})\r\n        .then(results => results.json())\r\n        .then(data =>{\r\n          this.setState(()=>{\r\n            return {\r\n              movies:data\r\n            }\r\n          })\r\n        })\r\n        .catch(err=>console.log(`This happened while trying to fetch movie list: ${err}`))\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      console.log(\"Componente desmontado\");\r\n      this.abortController.abort()\r\n    }\r\n\r\n    sortByDate=()=>this.setState(()=>({sorting:\"release\"}))\r\n    sortByRating=()=>this.setState(()=>({sorting:\"average_rating\"}))\r\n\r\n    render(){\r\n\r\n      if (this.state.movies.length===0){\r\n        return <LoadingPage />\r\n      }\r\n\r\n      const moviesSorted = this.state.movies.sort((a,b)=>{\r\n        return a[this.state.sorting]<b[this.state.sorting]?1:-1\r\n      })\r\n      \r\n      return(\r\n        <div>\r\n          <div className=\"dashboard-title\">\r\n            <h1>Movie List</h1>\r\n            {this.props.isAuthenticated && <Link to=\"/add-movie\"><AddIcon fontSize=\"large\"/></Link>}\r\n          </div>\r\n          \r\n          \r\n          <p>\r\n            <button className=\"btn btn-outline-success\" onClick={this.sortByDate}>Sort by release date</button>\r\n            <button className=\"btn btn-outline-success\" onClick={this.sortByRating}>Sort by rating</button>\r\n          </p>\r\n          {moviesSorted.map( movie =>{\r\n            return <MovieCard key={movie.id} movie={movie}/>\r\n          })}\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(MovieDashboardPage);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass CreateMoviePage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title:\"\",\r\n            genre:\"\",\r\n            plot:\"\",\r\n            release:\"\",\r\n            submitted:false,\r\n            error:\"\"\r\n        }\r\n    }\r\n    handleOnChange = (e) =>{\r\n        e.persist();\r\n        this.setState(() => ({\r\n            [e.target.name]: e.target.value \r\n        }))\r\n    }\r\n    handleOnSubmit = (ev) =>{\r\n        ev.preventDefault();\r\n        const url = `http://localhost:8000/api/movies/`\r\n        fetch(url, {\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\":\"application/json\",\r\n                \"Authorization\":`Token ${localStorage.getItem(\"token\")}`\r\n            },\r\n            body:JSON.stringify({\r\n                title:this.state.title,\r\n                genre:this.state.genre,\r\n                plot:this.state.plot,\r\n                release:this.state.release\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (!res.ok){\r\n                const err = new Error(\"HTTP status code: \" + res.status);\r\n                err.response = res;\r\n                err.status = res.status;\r\n                throw err; /* esto me lleva al catch */\r\n            }else{\r\n                return res.json();\r\n            }\r\n        })\r\n        .then(data=>{\r\n            console.log(data);\r\n            this.setState(()=>({\r\n                submitted:true\r\n            }))\r\n        })\r\n        .catch(err=>{\r\n            console.log(`This happened while trying to create movie: ${err}`)\r\n            const status = err.toString().split(\" \")[4];\r\n            console.log(status);\r\n            if (status===\"400\"){\r\n                this.setState(()=>({\r\n                    error:\"Invalid form data or title already exists.\"\r\n                }));\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.submitted){\r\n            return <Redirect to=\"/dashboard\"/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Add a movie</h1>\r\n                <h3 className=\"form-message\">{this.state.error}</h3>\r\n                <form onSubmit={this.handleOnSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"title\"></label>\r\n                        <input \r\n                        type=\"text\" \r\n                        placeholder=\"Title\" \r\n                        name=\"title\"\r\n                        id=\"title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleOnChange}\r\n                        className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"genre\"></label>\r\n                        <input \r\n                        type=\"text\" \r\n                        placeholder=\"Genre\" \r\n                        name=\"genre\" \r\n                        id=\"genre\"\r\n                        value={this.state.genre}\r\n                        onChange={this.handleOnChange}\r\n                        className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"plot\"></label>\r\n                        <textarea\r\n                        placeholder=\"Plot\"\r\n                        id=\"plot\"\r\n                        name=\"plot\" \r\n                        value={this.state.plot}\r\n                        onChange={this.handleOnChange}\r\n                        className=\"form-control\"\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"release\"></label>\r\n                        <input \r\n                        type=\"text\" \r\n                        placeholder=\"Release date (YYYY-MM-DD)\" \r\n                        name=\"release\" \r\n                        id=\"release\"\r\n                        value={this.state.release}\r\n                        onChange={this.handleOnChange}\r\n                        className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-btn-div\">\r\n                        <button type=\"submit\" className=\"btn btn-dark\">Add movie</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        userInfo: state.auth.user_info\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateMoviePage);\r\n\r\n","import React, {useState} from \"react\";\r\n//import { Redirect } from \"react-router\";\r\n\r\nconst RatingForm = ({movieId})=>{\r\n    const [rating, setRating] =  useState(3);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleOnSubmit=(ev)=>{\r\n        ev.preventDefault(); //el refresh me desloguea\r\n    \r\n        const url = `http://localhost:8000/api/movies/${movieId}/ratings/`;\r\n        fetch(url, {\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\":\"application/json\",\r\n                \"Authorization\":`Token ${localStorage.getItem(\"token\")}`\r\n            },\r\n            body:JSON.stringify({\r\n                rating,\r\n                comment\r\n            })\r\n        })\r\n        .then(res=>res.json()) /* si es exitoso devuelve la info completa de la review, userid, movieid, etc. */\r\n        .then(data=>{\r\n            console.log(data);\r\n            if (data.hasOwnProperty(\"movie\") || data.hasOwnProperty(\"rating\")){\r\n                setSubmitted(true);\r\n            } else {\r\n                setError(data.comment[0]);\r\n            }\r\n            \r\n        })\r\n        .catch(err=>{\r\n            console.log(`This happened while trying to create review: ${err}`);\r\n        });\r\n        \r\n    }\r\n    const handleOnCommentChange=(ev)=>{\r\n        ev.persist();\r\n        setComment(ev.target.value);\r\n    }\r\n    const handleRatingChange=(ev)=>{\r\n        setRating(parseInt(ev.target.value))\r\n    }\r\n    \r\n    if(submitted){\r\n        return (\r\n            <React.Fragment>\r\n                <h3>Thanks for your review!</h3>\r\n                <h2>Continue exploring the site.</h2>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleOnSubmit} className=\"review-form\">\r\n            \r\n            <div className=\"form-group col-6 col-md-3\" >\r\n                <label htmlFor=\"ratingField\">Rating</label>\r\n                <input type=\"number\" value={rating} onChange={handleRatingChange} min={1} max={5} id=\"ratingField\" className=\"form-control\"/>\r\n                <small className=\"form-text text-muted\">1 to 5 stars</small>\r\n            </div>\r\n            <h4 className=\"form-message\">{error}</h4>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"commentField\">Review</label>\r\n                <textarea \r\n                    value={comment} \r\n                    onChange={handleOnCommentChange} \r\n                    maxLength={500} \r\n                    placeholder=\"Did you like it?\"\r\n                    rows={7} \r\n                    cols={40} \r\n                    className=\"form-control\"\r\n                    id=\"commentField\"\r\n                >\r\n                </textarea>\r\n                <small className=\"form-text text-muted\">Up to 500 characters</small>\r\n            </div>\r\n            <button className=\"btn btn-secondary\" type=\"submit\">Send Review</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RatingForm;","import React from \"react\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport {DateTime} from \"luxon\";\r\n\r\nconst Rating = ({rating})=>{\r\n    const date = DateTime.fromISO(rating.rate_date).toLocaleString();\r\n    return (\r\n        <div className=\"rating-card\">\r\n            <h2>{rating.comment}</h2>\r\n            <p>{rating.rating} <StarIcon/></p>\r\n            <small>{date}</small>\r\n            <hr></hr>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating;","/* aca deberia tener un pedazo de state que tenga current movie reviews creo */\r\nimport React from \"react\";\r\nimport RatingForm from \"./RatingForm\";\r\nimport { connect } from \"react-redux\";\r\nimport Rating from \"./Rating\";\r\nimport { withRouter } from \"react-router\";\r\n\r\n/* aca voy a llegar mediante movies/someid, en el componente accedo haciendo match.params.someid */\r\nclass MovieRatingPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            movie_id:this.props.match.params[\"movieId\"],\r\n            movie:{},\r\n            ratings:[],\r\n            needToRefresh:false\r\n        };\r\n        this.activateRefresh = this.activateRefresh.bind(this);\r\n    }\r\n        \r\n\r\n    abortController = new AbortController();\r\n\r\n    componentDidMount(){\r\n        console.log(\"Componente movierating montado\");\r\n        Promise.all([\r\n            fetch(`http://localhost:8000/api/movies/${this.state.movie_id}/ratings/`, {signal:this.abortController.signal}).then(res=>res.json()),\r\n            fetch(`http://localhost:8000/api/movies/${this.state.movie_id}/`, {signal:this.abortController.signal}).then(res=>res.json())\r\n        ])\r\n        .then(([ratingData, movieData])=>{\r\n            if (Array.isArray(ratingData) && !movieData.hasOwnProperty(\"detail\")){\r\n                this.setState(()=>({\r\n                    movie:movieData,\r\n                    ratings:ratingData\r\n                }))\r\n            }\r\n        })\r\n        .catch(err=>console.log(`This happened while trying to fetch movie ratings: ${err}`))    \r\n    }\r\n\r\n    activateRefresh(){\r\n        this.setState(()=>({\r\n            needToRefresh:true\r\n        }));\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        console.log(\"Componente movierating desmontado\");\r\n        this.abortController.abort();\r\n    }\r\n\r\n\r\n    render(){\r\n        let rating_components = [];\r\n        if (this.state.ratings.length!==0){\r\n            rating_components = this.state.ratings.map(rating=>{\r\n                return <Rating key={rating.id} rating={rating}/>\r\n            });\r\n        }\r\n        \r\n        const no_components = <h2>There's no ratings for this movie yet, be on the avant!</h2>\r\n\r\n        return(\r\n            <div className=\"movie-ratings-container\">\r\n                <h1>Reviews for {this.state.movie.title}</h1>\r\n                {/* <button onClick={this.toggleShowForm}>Write your review</button> */}\r\n                {this.props.isAuthenticated?\r\n                (<RatingForm movieId={this.state.movie_id}/>)\r\n                :(<h2 style={{\"color\":\"darkgreen\"}}>Log in to write a review</h2>)}\r\n                {this.state.ratings.length===0?(no_components):(rating_components)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    // tengo state.pruebas, state.auth, state.expenses segun lo que puse en configureStore\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps)(MovieRatingPage));\r\n\r\n\r\n/* fetch(`http://localhost:8000/api/movies/${this.state.movie_id}/ratings/`, {signal:this.abortController.signal})\r\n          .then(results => results.json())\r\n          .then(data =>{\r\n            if (Array.isArray(data)){\r\n                this.setState(()=>{\r\n                    return {\r\n                      ratings:data\r\n                    }\r\n                });\r\n            }\r\n          })\r\n          .catch(err=>console.log(`This happened while trying to fetch movie ratings: ${err}`)) */","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport LoadingPage from \"./LoadingPage\";\r\n\r\n\r\nclass MovieDetailPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            movieId: this.props.match.params[\"movieId\"],\r\n            movie:{},\r\n            error:\"\",\r\n            addedToWl:false,\r\n        };\r\n        this.handleAddToWl = this.handleAddToWl.bind(this);\r\n    }\r\n    abortController = new AbortController();\r\n\r\n    componentDidMount(){\r\n        console.log(\"componente MovieDetail montado.\")\r\n        const url = `http://localhost:8000/api/movies/${this.state.movieId}/`;\r\n        fetch(url, {signal:this.abortController.signal})\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            if (data.hasOwnProperty(\"title\")){\r\n                this.setState(()=>({\r\n                    movie:data\r\n                }));\r\n            }else{\r\n                this.setState(()=>({\r\n                    movie:{error:\"Not Found\"},\r\n                    error:data.detail\r\n                }))\r\n            }\r\n        })\r\n        .catch(err=>console.log(`This happened while trying to fetch movie details: ${err}`))\r\n    }\r\n    /* si no existe me da {\"detail\": \"Not found.\"} */\r\n    \r\n    componentWillUnmount(){\r\n        console.log(\"componente MovieDetail desmontado.\")\r\n        this.abortController.abort()\r\n    }\r\n\r\n    handleAddToWl(){\r\n        const url = `http://localhost:8000/api/users/${this.props.currentUserId}/watchlist/`;\r\n        fetch(url, {\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\":\"application/json\",\r\n                \"Authorization\":`Token ${localStorage.getItem(\"token\")}`\r\n            },\r\n            body:JSON.stringify({\r\n                movie_id:this.state.movieId\r\n            })\r\n        })\r\n        .then(resp=>{\r\n            console.log(resp.status)\r\n            return resp.json()\r\n        })\r\n        .then(data=>{\r\n            if (data.hasOwnProperty(\"success\")){\r\n                this.setState(()=>({\r\n                    addedToWl:true \r\n                }))\r\n                /* esto me va a disparar redirect a watchlist */\r\n            }else{\r\n                console.log(`Esta es la rama else de solicitud de agregado: ${data}`);\r\n                this.setState(()=>({\r\n                    error:data[\"message\"]\r\n                }));\r\n            }\r\n        })\r\n        .catch(err=>console.log(`This happened while trying to add to watchlist: ${err}`))\r\n    }\r\n\r\n    isEmpty(obj) {\r\n        for(var key in obj) {\r\n            if(obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    \r\n    render(){\r\n        if (this.isEmpty(this.state.movie)) {\r\n            return <LoadingPage/>\r\n        } else if (this.state.addedToWl){\r\n            return <Redirect to={`/watchlist/${this.props.currentUserId}`} />\r\n        }\r\n\r\n        return(\r\n            <div className=\"movie-detail-container\">\r\n                <h1 className=\"movie-detail-title\">{this.state.movie.title}</h1>\r\n                <div className=\"card-text\">\r\n                    <span>{this.state.movie.average_rating} <StarIcon/></span>\r\n                </div>\r\n                {this.state.error!==\"\" && <h3 style={{\"color\":\"crimson\"}}>{this.state.error}</h3>}\r\n                {this.props.isAuthenticated &&  !this.state.error && <button className=\"btn btn-success\" onClick={this.handleAddToWl}>Add to Watchlist</button>}\r\n                <h2>Release date: {this.state.movie.release}</h2>\r\n                <p>Genre: {this.state.movie.genre.charAt(0).toUpperCase() + this.state.movie.genre.slice(1)}</p>\r\n                <p>{this.state.movie.plot}</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        currentUserId: state.auth.user_info[\"user_id\"]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MovieDetailPage);\r\n\r\n/* } else if (this.state.error===\"Movie already in watchlist\"){\r\n            return <h2>{this.state.error}</h2> */","import React from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst WatchlistCard =({movie, owner, handleRemoveFromWl, isAuthenticated})=>{\r\n    \r\n    return(\r\n        <div className=\"wl-card-container\">\r\n            <MovieCard movie={movie} /> \r\n            {owner && isAuthenticated && <button className=\"btn btn-danger remove-wl-btn\" onClick={()=>handleRemoveFromWl(movie.id)}>X</button>}\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        isAuthenticated: state.auth.isAuthenticated\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WatchlistCard);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n//import MovieCard from \"./MovieCard\";\r\nimport WatchlistCard from \"./WatchlistCard\";\r\n\r\nclass WatchlistPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            userId:this.props.match.params[\"userId\"],\r\n            watchlist:[],\r\n            owner:this.props.match.params[\"userId\"] == this.props.currentUserId\r\n        }\r\n        this.handleRemoveFromWl = this.handleRemoveFromWl.bind(this);\r\n    }\r\n    \r\n    abortController = new AbortController();\r\n    componentDidMount(){\r\n        console.log(\"componente watchlist montado\");\r\n        const url = `http://localhost:8000/api/users/${this.state.userId}/watchlist/`;\r\n\r\n        fetch(url, {signal:this.abortController.signal})\r\n        .then(resp => resp.json())\r\n        .then(data=>{\r\n            if (Array.isArray(data)){\r\n                this.setState(()=>({\r\n                    watchlist:data\r\n                }))\r\n            }\r\n        })\r\n        .catch(err=>console.log(`This happened while trying to fetch watchlist: ${err}`))\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        console.log(\"componente Watchlist desmontado.\");\r\n        this.abortController.abort();\r\n    }\r\n\r\n    handleRemoveFromWl(targetId){\r\n        const newWatchlist = this.state.watchlist.filter(movie=>{\r\n            return movie.id!=targetId; //si tiene id distinto al target, queda\r\n        });\r\n        const url = `http://localhost:8000/api/users/${this.state.userId}/watchlist/`;\r\n        fetch(url, {\r\n            method:\"PUT\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\":\"application/json\",\r\n                \"Authorization\":`Token ${localStorage.getItem(\"token\")}`\r\n            },\r\n            body:JSON.stringify({\r\n                \"movie_id\":targetId\r\n            })\r\n        })\r\n        .then(resp=>resp.json())\r\n        .then(data=>{\r\n            console.log(`This came back from the put request ${data}`);\r\n            this.setState(()=>({\r\n                watchlist:newWatchlist\r\n            }))\r\n        })\r\n        .catch(err=>console.log(`This happened while trying to update watchlist: ${err}`))\r\n    }\r\n\r\n\r\n    render(){\r\n        if (!this.props.isAuthenticated){\r\n            return <Redirect to=\"/dashboard\" />\r\n        }\r\n        if (this.state.watchlist.length===0){\r\n            return <h2>Your watchlist is empty</h2>\r\n        }\r\n        //triple igualdad no porque uno es int y el otro str\r\n        const movies = this.state.watchlist.map(movie=>{\r\n            return <WatchlistCard key={movie.id} movie={movie} owner={this.state.owner} handleRemoveFromWl={this.handleRemoveFromWl}/>\r\n        })\r\n        return(\r\n            <div>\r\n                <h1>Watchlist for {this.props.username} </h1>\r\n                {movies}\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        username: state.auth.user_info[\"username\"],\r\n        currentUserId: state.auth.user_info[\"user_id\"],\r\n        isAuthenticated: state.auth.isAuthenticated\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WatchlistPage);","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst NotFoundPage = () => (\r\n    <div>\r\n        <h1>404!</h1>\r\n        <p><Link to=\"/\">Ho Back To Gome</Link></p>\r\n    </div>\r\n)\r\n\r\nexport default NotFoundPage;","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {setUser} from '../actions/authActions';\r\n\r\n\r\nclass LoginPage extends React.Component {\r\n    state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        error:this.props.error\r\n    }\r\n    handleOnChange = (e) => {\r\n        e.persist();\r\n        this.setState(() => ({\r\n            [e.target.name]: e.target.value \r\n        }))\r\n    }\r\n\r\n    handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        fetch(`http://localhost:8000/api/api-token-auth/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                username:this.state.username,\r\n                password:this.state.password\r\n            })\r\n        })\r\n        .then(res => {\r\n            console.log(res.status)\r\n            return res.json()\r\n        })\r\n        .then(data => {\r\n            \r\n            if (data.hasOwnProperty(\"token\")){\r\n                localStorage.setItem(\"token\", data.token);\r\n                this.props.setUser(data.user_info);\r\n            }else{\r\n                console.log(data.error);\r\n                this.setState(()=>({\r\n                    error:data.error\r\n                }))\r\n            }\r\n\r\n        })\r\n        .catch(err=>console.log(`This happened while trying to authenticate: ${err}`))\r\n        \r\n    }\r\n    \r\n    render(){\r\n\r\n        return(\r\n            <div className=\"form-div\">\r\n                {this.state.error && <h4 className=\"form-message\">{this.state.error}</h4>}\r\n                <form onSubmit={this.handleOnSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"logUsername\"></label>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Username\" \r\n                            name=\"username\" \r\n                            value={this.state.username}\r\n                            onChange={this.handleOnChange}\r\n                            id=\"logUsername\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"logPassword\"></label>\r\n                        <input \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            name=\"password\" \r\n                            value={this.state.password}\r\n                            onChange={this.handleOnChange}\r\n                            id=\"logPassword\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-btn-div\"> \r\n                        <button type=\"submit\" className=\"btn btn-primary login-btn\"> Log In </button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUser: (userInfo) => dispatch(setUser(userInfo))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginPage)","import React from \"react\";\r\n\r\nclass RegisterPage extends React.Component {\r\n    state = {\r\n        username: \"\",\r\n        email:\"\",\r\n        password: \"\",\r\n        password2:\"\",\r\n        submitted:false,\r\n        error_message:\"\",\r\n    }\r\n    handleOnChange = (e) =>{\r\n        e.persist();\r\n        this.setState(() => ({\r\n            [e.target.name]: e.target.value \r\n        }))\r\n    }\r\n\r\n    handleOnSubmit = (ev) =>{\r\n        const url = `http://localhost:8000/api/users/register/`;\r\n        ev.preventDefault()\r\n        /* make post request */\r\n        fetch(url, {\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                username:this.state.username,\r\n                email:this.state.email,\r\n                password:this.state.password,\r\n                password2:this.state.password2\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        /* {\r\n            \"response\": \"Succesfully registered new user.\",\r\n            \"username\": \"agustin\",\r\n            \"email\": \"agustin@ejem.com\"\r\n        } */\r\n        .then(data=>{\r\n            if (data.response){\r\n                this.setState(()=>({\r\n                    submitted:true\r\n                }))\r\n            }else{\r\n                this.setState(()=>({\r\n                    error: data.username || data.error\r\n                }))\r\n            }\r\n        })\r\n        .catch(err=>console.log(`This happened while trying to register user:${err}`))\r\n        /* 400 no me tira para este lado, por eso tengo condicional en then anterior */\r\n    }\r\n\r\n    render(){\r\n        if (this.state.submitted){\r\n            return(\r\n                <div>\r\n                    <h2>Your registration was taken care of. Go to Login to please.</h2>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className=\"form-div\">\r\n                <h4 className=\"form-message\">{this.state.error}</h4>\r\n                <form onSubmit={this.handleOnSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\"></label>\r\n                        <input \r\n                        type=\"text\" \r\n                        placeholder=\"Username\" \r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleOnChange}\r\n                        className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\"></label>\r\n                        <input \r\n                        type=\"password\" \r\n                        placeholder=\"Password\" \r\n                        name=\"password\" \r\n                        id=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleOnChange}\r\n                        className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password2\"></label>\r\n                        <input \r\n                        type=\"password\" \r\n                        placeholder=\"Confirm Password\"\r\n                        id=\"password2\"\r\n                        name=\"password2\" \r\n                        value={this.state.password2}\r\n                        onChange={this.handleOnChange}\r\n                        className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\"></label>\r\n                        <input \r\n                        type=\"email\" \r\n                        placeholder=\"Email (optional)\" \r\n                        name=\"email\" \r\n                        id=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleOnChange}\r\n                        className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-btn-div\">\r\n                        <button type=\"submit\" className=\"btn btn-dark\">Register</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterPage;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\n//...rest es una teje para nombrar en el destructurado lo que nombre explicitamente, o sea, \r\n//...rest es todo lo que no es isAuthenticated y component en props. (exact, path, history, etc)\r\n//component:Component es ponerle alias Component a la prop que venia llamandose component\r\nexport const PublicRoute = ({isAuthenticated, component:Component, ...rest}) => (\r\n    <Route {...rest} component={(props)=>{\r\n        return isAuthenticated? \r\n        ( <Redirect to=\"/dashboard\" /> ) \r\n        : ( <Component {...props} /> );\r\n    }}/>\r\n)\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        isAuthenticated:state.auth.isAuthenticated\r\n        //esto lo hacia para convertir la existencia o ausencia de un string en un booleano\r\n        //si state.auth.uid es undefined un !, lo hace true, y !! lo hace false\r\n        //si state.auth.uid es un string, !lo hace false, y !! lo hace true\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\n\r\nimport Header from \"../components/Header.js\";\r\n//...rest es una teje para nombrar en el destructurado lo que nombre explicitamente, o sea, \r\n//...rest es todo lo que no es isAuthenticated y component en props. (exact, path, history, etc)\r\n//component:Component es ponerle alias Component a la prop que venia llamandose component\r\nexport const PrivateRoute = ({isAuthenticated, component:Component, ...rest}) => (\r\n    <Route {...rest} component={(props)=>{\r\n        return isAuthenticated? \r\n        (\r\n            <div>\r\n                \r\n                <Component {...props}/>\r\n            </div>\r\n        ) \r\n        : (<Redirect to=\"/login\"/>);\r\n    }}/>\r\n)\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        isAuthenticated:state.auth.isAuthenticated\r\n        //esto lo hacia para convertir la existencia o ausencia de un string en un booleano\r\n        //si state.auth.uid es undefined un !, lo hace true, y !! lo hace false\r\n        //si state.auth.uid es un string, !lo hace false, y !! lo hace true\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from \"react\";\r\nimport {Router, Route, Switch, Redirect} from \"react-router-dom\";\r\n\r\nimport Header from \"../components/Header.js\"; //header lo voy a mostrar dependiendo de las rutas, por eso lo muevo a PrivateRoute\r\nimport MoviesDashboardPage from \"../components/MoviesDashboardPage\";\r\nimport CreateMoviePage from \"../components/CreateMoviePage.js\";\r\nimport MovieRatingPage from \"../components/MovieRatingPage\";\r\nimport MovieDetailPage from \"../components/MovieDetailPage\";\r\nimport WatchlistPage from \"../components/WatchlistPage\";\r\nimport NotFoundPage from \"../components/NotFoundPage\";\r\nimport LoginPage from \"../components/LoginPage\";\r\nimport RegisterPage from \"../components/RegisterPage\";\r\nimport { createBrowserHistory } from 'history';\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\n\r\nexport const history =  createBrowserHistory(); \r\n//si uso Router en lugar de BrowserRouter, le puedo pasar mi instancia de history\r\n//quiero que me deje ir a LoginPage solo si no estoy authenticado, si no que me redirija a dashboard\r\nconst AppRouter = () =>(\r\n\r\n    <Router history={history}>\r\n        <div>\r\n            <Header/>\r\n            <Switch>\r\n                <Route exact={true} path=\"/\"><Redirect to=\"/dashboard\"/></Route>\r\n                <Route path=\"/dashboard\" component={MoviesDashboardPage}/>\r\n                <PrivateRoute path=\"/add-movie\" component={CreateMoviePage}/>\r\n                <Route path=\"/movies/:movieId/\" component={MovieDetailPage}/>\r\n                <Route path=\"/ratings/:movieId/\" component={MovieRatingPage}/>\r\n                <Route path=\"/watchlist/:userId\" component={WatchlistPage}/>\r\n                <PublicRoute exact={true} path=\"/register/\" component={RegisterPage}/>\r\n                <PublicRoute exact={true} path=\"/login/\" component={LoginPage}/>\r\n                \r\n                <Route component={NotFoundPage} /> \r\n                {/* with Switch and no path defined, this will run if there's no match for any of the routes above */}\r\n            </Switch>\r\n                \r\n        </div>\r\n        \r\n    </Router>\r\n);\r\n\r\nexport default AppRouter;","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./store/configureStore\"\r\n\r\nimport AppRouter from \"./routers/AppRouter\"\r\n\r\nReactDOM.render(\r\n  <Provider store={store()}>\r\n    <AppRouter />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}